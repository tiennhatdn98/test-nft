<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="40.906" tests="80" failures="0">
  <testsuite name="Root Suite" timestamp="2023-01-13T03:53:41" tests="0" time="0.000" failures="0">
  </testsuite>
  <testsuite name="ERC721" timestamp="2023-01-13T03:53:41" tests="0" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="0.000" failures="0">
  </testsuite>
  <testsuite name="1. Initialize" timestamp="2023-01-13T03:53:41" tests="1" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="1.630" failures="0">
    <testcase name="ERC721 1. Initialize 1.1. Should assign states successfully" time="0.069" classname="1.1. Should assign states successfully">
    </testcase>
  </testsuite>
  <testsuite name="2. Mint" timestamp="2023-01-13T03:53:42" tests="13" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="5.812" failures="0">
    <testcase name="ERC721 2. Mint 2.1. Should be fail when recipient address is zero address" time="0.040" classname="2.1. Should be fail when recipient address is zero address">
    </testcase>
    <testcase name="ERC721 2. Mint 2.2. Should be fail when recipient address is a contract address" time="0.018" classname="2.2. Should be fail when recipient address is a contract address">
    </testcase>
    <testcase name="ERC721 2. Mint 2.3. Should be fail when token URI is empty" time="0.017" classname="2.3. Should be fail when token URI is empty">
    </testcase>
    <testcase name="ERC721 2. Mint 2.4. Should be fail when amount is equal 0" time="0.022" classname="2.4. Should be fail when amount is equal 0">
    </testcase>
    <testcase name="ERC721 2. Mint 2.5. Should be fail when price is equal 0" time="0.016" classname="2.5. Should be fail when price is equal 0">
    </testcase>
    <testcase name="ERC721 2. Mint 2.6. Should be fail when amount is less than price" time="0.022" classname="2.6. Should be fail when amount is less than price">
    </testcase>
    <testcase name="ERC721 2. Mint 2.7. Should be fail when user pay native token and msg.value is not equal amount" time="0.056" classname="2.7. Should be fail when user pay native token and msg.value is not equal amount">
    </testcase>
    <testcase name="ERC721 2. Mint 2.8. Should be fail when user pays cash test token and payment token is not a contract address" time="0.013" classname="2.8. Should be fail when user pays cash test token and payment token is not a contract address">
    </testcase>
    <testcase name="ERC721 2. Mint 2.9. Should be fail when local government address is zero address" time="0.015" classname="2.9. Should be fail when local government address is zero address">
    </testcase>
    <testcase name="ERC721 2. Mint 2.10. Should be fail when local government address is a contract address" time="0.017" classname="2.10. Should be fail when local government address is a contract address">
    </testcase>
    <testcase name="ERC721 2. Mint 2.11. Should be fail when transaction is not signed by verifier" time="0.066" classname="2.11. Should be fail when transaction is not signed by verifier">
    </testcase>
    <testcase name="ERC721 2. Mint 2.12. Should mint successfully when user pays native token" time="0.152" classname="2.12. Should mint successfully when user pays native token">
    </testcase>
    <testcase name="ERC721 2. Mint 2.13. Should mint successfully when user pays cash test token" time="0.149" classname="2.13. Should mint successfully when user pays cash test token">
    </testcase>
  </testsuite>
  <testsuite name="3. Mint With Royalty" timestamp="2023-01-13T03:53:48" tests="13" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="5.011" failures="0">
    <testcase name="ERC721 3. Mint With Royalty 3.1. Should be fail when recipient address is zero address" time="0.014" classname="3.1. Should be fail when recipient address is zero address">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.2. Should be fail when recipient address is a contract address" time="0.013" classname="3.2. Should be fail when recipient address is a contract address">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.3. Should be fail when token URI is empty" time="0.022" classname="3.3. Should be fail when token URI is empty">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.4. Should be fail when amount is equal 0" time="0.028" classname="3.4. Should be fail when amount is equal 0">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.5. Should be fail when price is equal 0" time="0.016" classname="3.5. Should be fail when price is equal 0">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.6. Should be fail when amount is less than price" time="0.020" classname="3.6. Should be fail when amount is less than price">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.7. Should be fail when user pay native token and msg.value is not equal amount" time="0.023" classname="3.7. Should be fail when user pay native token and msg.value is not equal amount">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.8. Should be fail when user pay native token and msg.value is not equal amount" time="0.029" classname="3.8. Should be fail when user pay native token and msg.value is not equal amount">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.9. Should be fail when local government address is zero address" time="0.014" classname="3.9. Should be fail when local government address is zero address">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.10. Should be fail when local government address is a contract address" time="0.014" classname="3.10. Should be fail when local government address is a contract address">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.11. Should be fail when transaction is not signed by verifier" time="0.032" classname="3.11. Should be fail when transaction is not signed by verifier">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.12. Should mint successfully when user pay native token" time="0.349" classname="3.12. Should mint successfully when user pay native token">
    </testcase>
    <testcase name="ERC721 3. Mint With Royalty 3.13. Should mint successfully when user pay cash test token" time="0.136" classname="3.13. Should mint successfully when user pay cash test token">
    </testcase>
  </testsuite>
  <testsuite name="4. Set Admin" timestamp="2023-01-13T03:53:53" tests="4" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="1.948" failures="0">
    <testcase name="ERC721 4. Set Admin 4.1. Should be fail when caller is not the owner" time="0.015" classname="4.1. Should be fail when caller is not the owner">
    </testcase>
    <testcase name="ERC721 4. Set Admin 4.2. Should be fail when setting zero address" time="0.015" classname="4.2. Should be fail when setting zero address">
    </testcase>
    <testcase name="ERC721 4. Set Admin 4.3. Should be fail when setting contract address" time="0.032" classname="4.3. Should be fail when setting contract address">
    </testcase>
    <testcase name="ERC721 4. Set Admin 4.4. Should set successfully" time="0.060" classname="4.4. Should set successfully">
    </testcase>
  </testsuite>
  <testsuite name="5. Set Verifier" timestamp="2023-01-13T03:53:55" tests="4" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="1.936" failures="0">
    <testcase name="ERC721 5. Set Verifier 5.1. Should be fail when caller is not the owner" time="0.012" classname="5.1. Should be fail when caller is not the owner">
    </testcase>
    <testcase name="ERC721 5. Set Verifier 5.2. Should be fail when setting zero address" time="0.014" classname="5.2. Should be fail when setting zero address">
    </testcase>
    <testcase name="ERC721 5. Set Verifier 5.3. Should be fail when setting a contract address" time="0.027" classname="5.3. Should be fail when setting a contract address">
    </testcase>
    <testcase name="ERC721 5. Set Verifier 5.4. Should set successfully" time="0.017" classname="5.4. Should set successfully">
    </testcase>
  </testsuite>
  <testsuite name="6. Set Expiration" timestamp="2023-01-13T03:53:57" tests="3" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="1.030" failures="0">
    <testcase name="ERC721 6. Set Expiration 6.1. Should be fail when caller is not the admin" time="0.019" classname="6.1. Should be fail when caller is not the admin">
    </testcase>
    <testcase name="ERC721 6. Set Expiration 6.2. Should be fail when setting 0" time="0.013" classname="6.2. Should be fail when setting 0">
    </testcase>
    <testcase name="ERC721 6. Set Expiration 6.3. Should set successfully" time="0.020" classname="6.3. Should set successfully">
    </testcase>
  </testsuite>
  <testsuite name="7. Set Token URI" timestamp="2023-01-13T03:53:58" tests="5" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="3.514" failures="0">
    <testcase name="ERC721 7. Set Token URI 7.1. Should be fail when token ID is nonexistent" time="0.017" classname="7.1. Should be fail when token ID is nonexistent">
    </testcase>
    <testcase name="ERC721 7. Set Token URI 7.2. Should be fail when new token URI is empty" time="0.017" classname="7.2. Should be fail when new token URI is empty">
    </testcase>
    <testcase name="ERC721 7. Set Token URI 7.3. Should be fail when transaction is not signed by verifier" time="0.031" classname="7.3. Should be fail when transaction is not signed by verifier">
    </testcase>
    <testcase name="ERC721 7. Set Token URI 7.4. Should be fail when signature data is invalid" time="0.097" classname="7.4. Should be fail when signature data is invalid">
    </testcase>
    <testcase name="ERC721 7. Set Token URI 7.5. Should set successfully" time="0.115" classname="7.5. Should set successfully">
    </testcase>
  </testsuite>
  <testsuite name="8. Set Token Status" timestamp="2023-01-13T03:54:02" tests="5" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="2.235" failures="0">
    <testcase name="ERC721 8. Set Token Status 8.1. Should be fail when set a token is nonexistent" time="0.023" classname="8.1. Should be fail when set a token is nonexistent">
    </testcase>
    <testcase name="ERC721 8. Set Token Status 8.2. Should be fail when set value is equal status of current token" time="0.012" classname="8.2. Should be fail when set value is equal status of current token">
    </testcase>
    <testcase name="ERC721 8. Set Token Status 8.3. Should be fail when transaction is not signed by verifier" time="0.040" classname="8.3. Should be fail when transaction is not signed by verifier">
    </testcase>
    <testcase name="ERC721 8. Set Token Status 8.4. Should be fail when signature is invalid" time="0.020" classname="8.4. Should be fail when signature is invalid">
    </testcase>
    <testcase name="ERC721 8. Set Token Status 8.5. Should set successfully" time="0.036" classname="8.5. Should set successfully">
    </testcase>
  </testsuite>
  <testsuite name="9. Get token URI" timestamp="2023-01-13T03:54:04" tests="3" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="1.365" failures="0">
    <testcase name="ERC721 9. Get token URI 9.1. Should be fail when get a token is nonexistent" time="0.020" classname="9.1. Should be fail when get a token is nonexistent">
    </testcase>
    <testcase name="ERC721 9. Get token URI 9.2. Should return exactly token URI" time="0.007" classname="9.2. Should return exactly token URI">
    </testcase>
    <testcase name="ERC721 9. Get token URI 9.3. Should retrieve exacty token URI after setting token URI" time="0.036" classname="9.3. Should retrieve exacty token URI after setting token URI">
    </testcase>
  </testsuite>
  <testsuite name="10. Withdraw" timestamp="2023-01-13T03:54:05" tests="6" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="5.981" failures="0">
    <testcase name="ERC721 10. Withdraw 10.1. Should be fail when caller is not owner" time="0.008" classname="10.1. Should be fail when caller is not owner">
    </testcase>
    <testcase name="ERC721 10. Withdraw 10.2. Should be fail when recipient address is zero addess" time="0.024" classname="10.2. Should be fail when recipient address is zero addess">
    </testcase>
    <testcase name="ERC721 10. Withdraw 10.3. Should be fail when amount is equal 0" time="0.014" classname="10.3. Should be fail when amount is equal 0">
    </testcase>
    <testcase name="ERC721 10. Withdraw 10.4. Should be fail when owner withdraw amount greater than withdrawable amount" time="0.017" classname="10.4. Should be fail when owner withdraw amount greater than withdrawable amount">
    </testcase>
    <testcase name="ERC721 10. Withdraw 10.5. Should be successful when owner withdraws native token" time="0.197" classname="10.5. Should be successful when owner withdraws native token">
    </testcase>
    <testcase name="ERC721 10. Withdraw 10.6. Should withdraw successfully when owner withdraws cash test token" time="0.088" classname="10.6. Should withdraw successfully when owner withdraws cash test token">
    </testcase>
  </testsuite>
  <testsuite name="11. Claim" timestamp="2023-01-13T03:54:11" tests="6" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="3.149" failures="0">
    <testcase name="ERC721 11. Claim 11.1. Should be fail when recipient address is zero address" time="0.061" classname="11.1. Should be fail when recipient address is zero address">
    </testcase>
    <testcase name="ERC721 11. Claim 11.2. Should be fail when amount of money want to claim is greater than current balance" time="0.014" classname="11.2. Should be fail when amount of money want to claim is greater than current balance">
    </testcase>
    <testcase name="ERC721 11. Claim 11.3. Should be successful when owner withdraws amount of all owned native token" time="0.015" classname="11.3. Should be successful when owner withdraws amount of all owned native token">
    </testcase>
    <testcase name="ERC721 11. Claim 11.4. Should be successful when owner withdraws a part of owned cash test token" time="0.057" classname="11.4. Should be successful when owner withdraws a part of owned cash test token">
    </testcase>
    <testcase name="ERC721 11. Claim 11.5. Should be successful when user claims amount of all owned cash test token" time="0.034" classname="11.5. Should be successful when user claims amount of all owned cash test token">
    </testcase>
    <testcase name="ERC721 11. Claim 11.6. Should be successful when user claims a part of owned native token" time="0.036" classname="11.6. Should be successful when user claims a part of owned native token">
    </testcase>
  </testsuite>
  <testsuite name="12. Transfer" timestamp="2023-01-13T03:54:14" tests="6" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="2.276" failures="0">
    <testcase name="ERC721 12. Transfer 12.1. Should be fail when sender transfer token to self" time="0.011" classname="12.1. Should be fail when sender transfer token to self">
    </testcase>
    <testcase name="ERC721 12. Transfer 12.2. Should be fail when recipient address is zero address" time="0.017" classname="12.2. Should be fail when recipient address is zero address">
    </testcase>
    <testcase name="ERC721 12. Transfer 12.3. Should be fail when token is nonexistent" time="0.016" classname="12.3. Should be fail when token is nonexistent">
    </testcase>
    <testcase name="ERC721 12. Transfer 12.4. Should be fail when token is deactive" time="0.032" classname="12.4. Should be fail when token is deactive">
    </testcase>
    <testcase name="ERC721 12. Transfer 12.5. Should be fail when token is not owned by sender" time="0.013" classname="12.5. Should be fail when token is not owned by sender">
    </testcase>
    <testcase name="ERC721 12. Transfer 12.6. Should transfer successfully" time="0.106" classname="12.6. Should transfer successfully">
    </testcase>
  </testsuite>
  <testsuite name="13. Buy" timestamp="2023-01-13T03:54:17" tests="3" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="0.000" failures="0">
    <testcase name="ERC721 13. Buy 13.1. Should be fail when buy a nonexistent token" time="0.012" classname="13.1. Should be fail when buy a nonexistent token">
    </testcase>
    <testcase name="ERC721 13. Buy 13.2. Should be fail when buy an owned token" time="0.018" classname="13.2. Should be fail when buy an owned token">
    </testcase>
    <testcase name="ERC721 13. Buy 13.3. Should be fail when token is deactive" time="0.033" classname="13.3. Should be fail when token is deactive">
    </testcase>
  </testsuite>
  <testsuite name="13.4. Buy without royalty" timestamp="2023-01-13T03:54:18" tests="2" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="0.953" failures="0">
    <testcase name="ERC721 13. Buy 13.4. Buy without royalty 13.4.1. Should be successful when user buys a token paid by native token" time="0.043" classname="13.4.1. Should be successful when user buys a token paid by native token">
    </testcase>
    <testcase name="ERC721 13. Buy 13.4. Buy without royalty 13.4.2. Should be successful when user buys a token paid by test cash token" time="0.085" classname="13.4.2. Should be successful when user buys a token paid by test cash token">
    </testcase>
  </testsuite>
  <testsuite name="13.5. Buy with royalty" timestamp="2023-01-13T03:54:19" tests="2" file="/home/nhat-truong/Projects/test-nft/test/ERC721.ts" time="1.082" failures="0">
    <testcase name="ERC721 13. Buy 13.5. Buy with royalty 13.5.1. Should be successful when user buys a token paid by native token" time="0.048" classname="13.5.1. Should be successful when user buys a token paid by native token">
    </testcase>
    <testcase name="ERC721 13. Buy 13.5. Buy with royalty 13.5.2. Should be successful when user buys a token paid by test cash token" time="0.083" classname="13.5.2. Should be successful when user buys a token paid by test cash token">
    </testcase>
  </testsuite>
  <testsuite name="VerifySignature" timestamp="2023-01-13T03:54:20" tests="1" file="/home/nhat-truong/Projects/test-nft/test/VerifySignature.ts" time="0.102" failures="0">
    <testcase name="VerifySignature Check signature" time="0.049" classname="Check signature">
    </testcase>
  </testsuite>
  <testsuite name="ERC721 Integration" timestamp="2023-01-13T03:54:20" tests="3" file="/home/nhat-truong/Projects/test-nft/test/integration/ERC721.ts" time="1.342" failures="0">
    <testcase name="ERC721 Integration 1.1 Mint token by paying native token without royalty =&gt; Transfer token =&gt; Local government claims =&gt; Owner of contract withdraws" time="0.109" classname="1.1 Mint token by paying native token without royalty =&gt; Transfer token =&gt; Local government claims =&gt; Owner of contract withdraws">
    </testcase>
    <testcase name="ERC721 Integration 1.2 Mint token by paying native token with royalty =&gt; Transfer token =&gt; Local government claims =&gt; Owner of contract withdraws" time="0.186" classname="1.2 Mint token by paying native token with royalty =&gt; Transfer token =&gt; Local government claims =&gt; Owner of contract withdraws">
    </testcase>
    <testcase name="ERC721 Integration 1.3. A user buys a token with royalty =&gt; Someone buys this token =&gt; Money will be transfered properly" time="0.211" classname="1.3. A user buys a token with royalty =&gt; Someone buys this token =&gt; Money will be transfered properly">
    </testcase>
  </testsuite>
</testsuites>